/*
 * generated by Xtext
 */
grammar InternalEvaluation;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.xtext.nordakademie.evaluation.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.nordakademie.evaluation.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.nordakademie.evaluation.services.EvaluationGrammarAccess;

}

@parser::members {
 
 	private EvaluationGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(EvaluationGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleSurvey
entryRuleSurvey 
:
{ before(grammarAccess.getSurveyRule()); }
	 ruleSurvey
{ after(grammarAccess.getSurveyRule()); } 
	 EOF 
;

// Rule Survey
ruleSurvey
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSurveyAccess().getGroup()); }
(rule__Survey__Group__0)
{ after(grammarAccess.getSurveyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePage
entryRulePage 
:
{ before(grammarAccess.getPageRule()); }
	 rulePage
{ after(grammarAccess.getPageRule()); } 
	 EOF 
;

// Rule Page
rulePage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPageAccess().getGroup()); }
(rule__Page__Group__0)
{ after(grammarAccess.getPageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQuestion
entryRuleQuestion 
:
{ before(grammarAccess.getQuestionRule()); }
	 ruleQuestion
{ after(grammarAccess.getQuestionRule()); } 
	 EOF 
;

// Rule Question
ruleQuestion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQuestionAccess().getAlternatives()); }
(rule__Question__Alternatives)
{ after(grammarAccess.getQuestionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFreetext
entryRuleFreetext 
:
{ before(grammarAccess.getFreetextRule()); }
	 ruleFreetext
{ after(grammarAccess.getFreetextRule()); } 
	 EOF 
;

// Rule Freetext
ruleFreetext
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFreetextAccess().getGroup()); }
(rule__Freetext__Group__0)
{ after(grammarAccess.getFreetextAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSelection
entryRuleSelection 
:
{ before(grammarAccess.getSelectionRule()); }
	 ruleSelection
{ after(grammarAccess.getSelectionRule()); } 
	 EOF 
;

// Rule Selection
ruleSelection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelectionAccess().getGroup()); }
(rule__Selection__Group__0)
{ after(grammarAccess.getSelectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChoice
entryRuleChoice 
:
{ before(grammarAccess.getChoiceRule()); }
	 ruleChoice
{ after(grammarAccess.getChoiceRule()); } 
	 EOF 
;

// Rule Choice
ruleChoice
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getChoiceAccess().getGroup()); }
(rule__Choice__Group__0)
{ after(grammarAccess.getChoiceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChart
entryRuleChart 
:
{ before(grammarAccess.getChartRule()); }
	 ruleChart
{ after(grammarAccess.getChartRule()); } 
	 EOF 
;

// Rule Chart
ruleChart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getChartAccess().getGroup()); }
(rule__Chart__Group__0)
{ after(grammarAccess.getChartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGraduation
entryRuleGraduation 
:
{ before(grammarAccess.getGraduationRule()); }
	 ruleGraduation
{ after(grammarAccess.getGraduationRule()); } 
	 EOF 
;

// Rule Graduation
ruleGraduation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGraduationAccess().getGroup()); }
(rule__Graduation__Group__0)
{ after(grammarAccess.getGraduationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRating
entryRuleRating 
:
{ before(grammarAccess.getRatingRule()); }
	 ruleRating
{ after(grammarAccess.getRatingRule()); } 
	 EOF 
;

// Rule Rating
ruleRating
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRatingAccess().getGroup()); }
(rule__Rating__Group__0)
{ after(grammarAccess.getRatingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Question__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getFreetextParserRuleCall_0()); }
	ruleFreetext
{ after(grammarAccess.getQuestionAccess().getFreetextParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getQuestionAccess().getSelectionParserRuleCall_1()); }
	ruleSelection
{ after(grammarAccess.getQuestionAccess().getSelectionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getQuestionAccess().getChartParserRuleCall_2()); }
	ruleChart
{ after(grammarAccess.getQuestionAccess().getChartParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getQuestionAccess().getRatingParserRuleCall_3()); }
	ruleRating
{ after(grammarAccess.getQuestionAccess().getRatingParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Survey__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Survey__Group__0__Impl
	rule__Survey__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Survey__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSurveyAccess().getSurveyKeyword_0()); }

	'survey' 

{ after(grammarAccess.getSurveyAccess().getSurveyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Survey__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Survey__Group__1__Impl
	rule__Survey__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Survey__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSurveyAccess().getNameAssignment_1()); }
(rule__Survey__NameAssignment_1)
{ after(grammarAccess.getSurveyAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Survey__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Survey__Group__2__Impl
	rule__Survey__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Survey__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSurveyAccess().getTitleAssignment_2()); }
(rule__Survey__TitleAssignment_2)
{ after(grammarAccess.getSurveyAccess().getTitleAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Survey__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Survey__Group__3__Impl
	rule__Survey__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Survey__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSurveyAccess().getGreetingAssignment_3()); }
(rule__Survey__GreetingAssignment_3)?
{ after(grammarAccess.getSurveyAccess().getGreetingAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Survey__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Survey__Group__4__Impl
	rule__Survey__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Survey__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSurveyAccess().getDurationAssignment_4()); }
(rule__Survey__DurationAssignment_4)?
{ after(grammarAccess.getSurveyAccess().getDurationAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Survey__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Survey__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Survey__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSurveyAccess().getPagesAssignment_5()); }
(rule__Survey__PagesAssignment_5)*
{ after(grammarAccess.getSurveyAccess().getPagesAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Page__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__0__Impl
	rule__Page__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getPageKeyword_0()); }

	'page' 

{ after(grammarAccess.getPageAccess().getPageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__1__Impl
	rule__Page__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getNameAssignment_1()); }
(rule__Page__NameAssignment_1)
{ after(grammarAccess.getPageAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__2__Impl
	rule__Page__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getPageAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__3__Impl
	rule__Page__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getQuestionsAssignment_3()); }
(rule__Page__QuestionsAssignment_3)*
{ after(grammarAccess.getPageAccess().getQuestionsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getPageAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Freetext__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Freetext__Group__0__Impl
	rule__Freetext__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Freetext__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFreetextAccess().getFreetextKeyword_0()); }

	'freetext' 

{ after(grammarAccess.getFreetextAccess().getFreetextKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Freetext__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Freetext__Group__1__Impl
	rule__Freetext__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Freetext__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFreetextAccess().getNameAssignment_1()); }
(rule__Freetext__NameAssignment_1)
{ after(grammarAccess.getFreetextAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Freetext__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Freetext__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Freetext__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFreetextAccess().getQuestionAssignment_2()); }
(rule__Freetext__QuestionAssignment_2)
{ after(grammarAccess.getFreetextAccess().getQuestionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Selection__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selection__Group__0__Impl
	rule__Selection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionAccess().getSelectKeyword_0()); }

	'select' 

{ after(grammarAccess.getSelectionAccess().getSelectKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Selection__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selection__Group__1__Impl
	rule__Selection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionAccess().getNameAssignment_1()); }
(rule__Selection__NameAssignment_1)
{ after(grammarAccess.getSelectionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Selection__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selection__Group__2__Impl
	rule__Selection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionAccess().getQuestionAssignment_2()); }
(rule__Selection__QuestionAssignment_2)
{ after(grammarAccess.getSelectionAccess().getQuestionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Selection__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selection__Group__3__Impl
	rule__Selection__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getSelectionAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Selection__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selection__Group__4__Impl
	rule__Selection__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionAccess().getChoicesAssignment_4()); }
(rule__Selection__ChoicesAssignment_4)*
{ after(grammarAccess.getSelectionAccess().getChoicesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Selection__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selection__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getSelectionAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Choice__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Choice__Group__0__Impl
	rule__Choice__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Choice__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceAccess().getFreetextAssignment_0()); }
(rule__Choice__FreetextAssignment_0)?
{ after(grammarAccess.getChoiceAccess().getFreetextAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Choice__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Choice__Group__1__Impl
	rule__Choice__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Choice__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceAccess().getNameAssignment_1()); }
(rule__Choice__NameAssignment_1)
{ after(grammarAccess.getChoiceAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Choice__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Choice__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Choice__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceAccess().getBulletPointAssignment_2()); }
(rule__Choice__BulletPointAssignment_2)
{ after(grammarAccess.getChoiceAccess().getBulletPointAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Chart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Chart__Group__0__Impl
	rule__Chart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChartAccess().getChartKeyword_0()); }

	'chart' 

{ after(grammarAccess.getChartAccess().getChartKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Chart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Chart__Group__1__Impl
	rule__Chart__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChartAccess().getNameAssignment_1()); }
(rule__Chart__NameAssignment_1)
{ after(grammarAccess.getChartAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Chart__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Chart__Group__2__Impl
	rule__Chart__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChartAccess().getQuestionAssignment_2()); }
(rule__Chart__QuestionAssignment_2)
{ after(grammarAccess.getChartAccess().getQuestionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Chart__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Chart__Group__3__Impl
	rule__Chart__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChartAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getChartAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Chart__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Chart__Group__4__Impl
	rule__Chart__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChartAccess().getChoicesAssignment_4()); }
(rule__Chart__ChoicesAssignment_4)*
{ after(grammarAccess.getChartAccess().getChoicesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Chart__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Chart__Group__5__Impl
	rule__Chart__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChartAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getChartAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Chart__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Chart__Group__6__Impl
	rule__Chart__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChartAccess().getXKeyword_6()); }

	'x' 

{ after(grammarAccess.getChartAccess().getXKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Chart__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Chart__Group__7__Impl
	rule__Chart__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChartAccess().getLeftParenthesisKeyword_7()); }

	'(' 

{ after(grammarAccess.getChartAccess().getLeftParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Chart__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Chart__Group__8__Impl
	rule__Chart__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChartAccess().getGraduationsAssignment_8()); }
(rule__Chart__GraduationsAssignment_8)*
{ after(grammarAccess.getChartAccess().getGraduationsAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Chart__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Chart__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChartAccess().getRightParenthesisKeyword_9()); }

	')' 

{ after(grammarAccess.getChartAccess().getRightParenthesisKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Graduation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Graduation__Group__0__Impl
	rule__Graduation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Graduation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraduationAccess().getNameAssignment_0()); }
(rule__Graduation__NameAssignment_0)?
{ after(grammarAccess.getGraduationAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Graduation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Graduation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Graduation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraduationAccess().getStatementAssignment_1()); }
(rule__Graduation__StatementAssignment_1)
{ after(grammarAccess.getGraduationAccess().getStatementAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Rating__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rating__Group__0__Impl
	rule__Rating__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rating__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRatingAccess().getChartKeyword_0()); }

	'chart' 

{ after(grammarAccess.getRatingAccess().getChartKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rating__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rating__Group__1__Impl
	rule__Rating__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rating__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRatingAccess().getNameAssignment_1()); }
(rule__Rating__NameAssignment_1)
{ after(grammarAccess.getRatingAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rating__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rating__Group__2__Impl
	rule__Rating__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Rating__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRatingAccess().getQuestionAssignment_2()); }
(rule__Rating__QuestionAssignment_2)
{ after(grammarAccess.getRatingAccess().getQuestionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rating__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rating__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rating__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRatingAccess().getRatingAssignment_3()); }
(rule__Rating__RatingAssignment_3)
{ after(grammarAccess.getRatingAccess().getRatingAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}











rule__Survey__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSurveyAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSurveyAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Survey__TitleAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSurveyAccess().getTitleSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getSurveyAccess().getTitleSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Survey__GreetingAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSurveyAccess().getGreetingSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getSurveyAccess().getGreetingSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Survey__DurationAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSurveyAccess().getDurationSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getSurveyAccess().getDurationSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Survey__PagesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSurveyAccess().getPagesPageParserRuleCall_5_0()); }
	rulePage{ after(grammarAccess.getSurveyAccess().getPagesPageParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Page__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getPageAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Page__QuestionsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getQuestionsQuestionParserRuleCall_3_0()); }
	ruleQuestion{ after(grammarAccess.getPageAccess().getQuestionsQuestionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Freetext__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFreetextAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFreetextAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Freetext__QuestionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFreetextAccess().getQuestionSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getFreetextAccess().getQuestionSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSelectionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__QuestionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionAccess().getQuestionSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getSelectionAccess().getQuestionSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__ChoicesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectionAccess().getChoicesChoiceParserRuleCall_4_0()); }
	ruleChoice{ after(grammarAccess.getSelectionAccess().getChoicesChoiceParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Choice__FreetextAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceAccess().getFreetextFreetextKeyword_0_0()); }
(
{ before(grammarAccess.getChoiceAccess().getFreetextFreetextKeyword_0_0()); }

	'freetext' 

{ after(grammarAccess.getChoiceAccess().getFreetextFreetextKeyword_0_0()); }
)

{ after(grammarAccess.getChoiceAccess().getFreetextFreetextKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Choice__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getChoiceAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Choice__BulletPointAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceAccess().getBulletPointSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getChoiceAccess().getBulletPointSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChartAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getChartAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__QuestionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChartAccess().getQuestionSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getChartAccess().getQuestionSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__ChoicesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChartAccess().getChoicesChoiceParserRuleCall_4_0()); }
	ruleChoice{ after(grammarAccess.getChartAccess().getChoicesChoiceParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__GraduationsAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChartAccess().getGraduationsGraduationParserRuleCall_8_0()); }
	ruleGraduation{ after(grammarAccess.getChartAccess().getGraduationsGraduationParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Graduation__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraduationAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getGraduationAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Graduation__StatementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGraduationAccess().getStatementSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getGraduationAccess().getStatementSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rating__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRatingAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRatingAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rating__QuestionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRatingAccess().getQuestionSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getRatingAccess().getQuestionSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rating__RatingAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRatingAccess().getRatingINTTerminalRuleCall_3_0()); }
	RULE_INT{ after(grammarAccess.getRatingAccess().getRatingINTTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


